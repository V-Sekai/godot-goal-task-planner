name: Build Godot
description: Build Godot with the provided options.
inputs:
  target:
    description: Build target (editor, template_release, template_debug).
    default: "editor"
  tests:
    description: Unit tests.
    default: false
  deploy:
    description: Deploy game.
    default: false
  deploy-platform:
    description: Deploy game platform.
    required: false
  deploy-platform-target:
    description: Deploy game target.
    required: false
  platform:
    description: Target platform.
    required: false
  sconsflags:
    default: ""
  scons-cache:
    description: The scons cache path.
    default: "${{ github.workspace }}/.scons-cache/"
  scons-cache-limit:
    description: The scons cache size limit.
    # actions/cache has 10 GiB limit, and GitHub runners have a 14 GiB disk.
    # Limit to 7 GiB to avoid having the extracted cache fill the disk.
    default: 7168
runs:
  using: "composite"
  steps:
    - name: Scons Build
      shell: bash
      env:
        SCONSFLAGS: ${{ inputs.sconsflags }}
        SCONS_CACHE: ${{ inputs.scons-cache }}
        SCONS_CACHE_LIMIT: ${{ inputs.scons-cache-limit }}
      run: |
        mkdir -p bin modules/mono/glue 
        cd godot
        if [[ "${{ inputs.deploy }}" == "true" ]]; then
          PLATFORM=${{ inputs.deploy-platform }}
          TARGET=${{ inputs.deploy-platform-target }}
        else
          PLATFORM=${{ inputs.platform }}
          TARGET=${{ inputs.target }}
        fi
        echo "Building with flags:" platform=$PLATFORM target=$TARGET tests=${{ inputs.tests }} ${{ env.SCONSFLAGS }}
        if [ "$TARGET" != "editor" ]; then rm -rf editor; fi  # Ensure we don't include editor code.
        scons platform=$PLATFORM target=$TARGET tests=${{ inputs.tests }} ${{ env.SCONSFLAGS }}
        cp -r bin/* ../bin        
        cp -r modules/mono/glue/* ../modules/mono/glue
        ls -l ../bin
